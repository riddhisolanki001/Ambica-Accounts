[
 {
  "docstatus": 0,
  "doctype": "Client Script",
  "dt": "Purchase Invoice",
  "enabled": 0,
  "modified": "2023-11-15 11:01:57.042227",
  "module": "Ambika Accounts",
  "name": "Attachments Mandatory",
  "script": "frappe.ui.form.on('Purchase Invoice', {\n    before_submit: function(frm) {\n            \n            var files=cur_frm.get_docinfo().attachments\n            var length=files.length\n            console.log(length)\n            console.log(files)3\n            if(length > 0) {\n              frm.reload_doc()\n              frm.refresh()\n            \n            }\n            if(length == 0) {\n              frappe.throw(__('Please Attach Documents First'))\n            \n            }\n           \n        \n    }\n})",
  "view": "Form"
 },
 {
  "docstatus": 0,
  "doctype": "Client Script",
  "dt": "Payment Reconciliation",
  "enabled": 1,
  "modified": "2023-11-15 19:22:01.094141",
  "module": "Ambika Accounts",
  "name": "force closing even outstanding in PR",
  "script": "frappe.ui.form.on('Payment Reconciliation', {\n\trefresh(frm){\n    console.log('script is working ');\n\t    \n\t    console.log('Payment Reconciliation document:', frm.doc);\n\t    var company = frm.doc.company\n\t    var party_account = frm.doc.receivable_payable_account\n\t    var party_type = frm.doc.party_type\n\t    var party = frm.doc.party\n\t    var posting_date = '';\n\t    \n\t   \n\t    var invoice_total =0\n\t    var payment_total=0\n\n\t    if (frm.doc.invoices && frm.doc.invoices.length > 0) {\n\t        $.each(frm.doc.invoices, function(i, d) {\n\t            var amt = d.amount;\n\t            invoice_total += amt\n\t            \n\t           // console.log(amt);\n\t        });\n\t        console.log(invoice_total)\n\t        \n\t        if (frm.doc.payments && frm.doc.payments.length > 0) {\n\t         $.each(frm.doc.payments, function(i, d) {\n\t            var amount = d.amount;\n\t                posting_date = d.posting_date\n\t            payment_total += amount\n\t           // console.log(amount);\n\t        });\n\t        console.log(payment_total)\n\t        if(payment_total < invoice_total){\n\t        var difference = parseInt(invoice_total) - parseInt(payment_total)\n\t        console.log(difference)\n\t        if(difference > 0){\n\t            frappe.confirm('Do you want to make Difference Entry',\n                () => {\n                    console.log(\"yes selected\")\n                    var newJvEntry = frappe.model.get_new_doc('Journal Entry');\n                            \t\tnewJvEntry.voucher_type = \"Journal Entry\";\n                            \t\tnewJvEntry.company = company;\n                            \t\tnewJvEntry.docstatus = 0;\n                            \t\tnewJvEntry.posting_date = posting_date;\n                            \t\n                            \t\tnewJvEntry.accounts = [];\n                 \n                            \t\t\t// console.log(description_of_goods, source_warehouse)\n                            \t\t\tnewJvEntry.accounts.push({\n                            \t\t\t\t\"account\": party_account,\n                            \t\t\t\t\"debit_in_account_currency\": difference,\n                            \t\t\t\t\"party_type\":party_type,\n                            \t\t\t\t\"party\":party\n                            \t\t\t\t\n                            \t\t\t\n                            \t\t\t});\n                            \t\t\t\tnewJvEntry.accounts.push({\n                            \t\t\t\t\"account\": '5218 - Write Off - S',\n                            \t\t\t\t\"credit_in_account_currency\": difference,\n                            \t\t\t\t\n                            \t\t\t\t\n                            \t\t\t\n                            \t\t\t});console.log(\"New Journal Entry:\", newJvEntry);\n\n                                         // Save the Journal Entry\n                                        frappe.call({\n                                            method: 'frappe.client.save',\n                                            args: {\n                                                doc: newJvEntry\n                                            },\n                                            callback: function (r) {\n                                                if (r.message) {\n                                                    console.log(\"Journal Entry saved successfully:\", r.message);\n                                                } else {\n                                                    console.error(\"Error saving Journal Entry:\", r.exc);\n                                                }\n                                        }\n                                });\n                    }, () => {\n                            console.log(\"No selected\")\n                    \n        // action to perform if No is selected\n                })\n\t            \n\t            \n\t        }\n\t   }\n\t        \n\t        \n\t        \n\t    } \n\t    }\n\t    \n\t}\n})",
  "view": "Form"
 },
 {
  "docstatus": 0,
  "doctype": "Client Script",
  "dt": "Journal Entry",
  "enabled": 1,
  "modified": "2023-11-22 10:40:19.424505",
  "module": "Ambika Accounts",
  "name": "Prepaid Expence Auto entry",
  "script": "frappe.ui.form.on('Journal Entry', {\n\trefresh:function(frm) {\n\t    \n\t    var today = frappe.datetime.nowdate();\n\t    \n        frm.add_custom_button(__('Prepaid Entry'), function() {\n            let d = new frappe.ui.Dialog({\n                    title: 'Enter details',\n                    fields: [\n                        {\n                            label: 'Amount',\n                            fieldname: 'amount',\n                            fieldtype: 'Currency'\n                        },\n                        {\n                            label: 'From Date',\n                            fieldname: 'from_date',\n                            fieldtype: 'Date'\n                        },\n                        {\n                            label: 'To Date',\n                            fieldname: 'to_date',\n                            fieldtype: 'Date'\n                        },\n                         {\n                            label: 'Credit Account',\n                            fieldname: 'credit_account',\n                            fieldtype: 'Link',\n                            options:'Account'\n                        },\n                        \n                        {\n                            label: 'User Remarks',\n                            fieldname: 'user_remark',\n                            fieldtype: 'Small Text',\n                            \n                        }\n                    ],\n                    size: 'small', // small, large, extra-large \n                    primary_action_label: 'Submit',\n                    primary_action(values) {\n                        console.log(values);\n                        var from_date = values.from_date\n                        var to_date = values.to_date\n                        var debit_account = values.debit_account\n                        var credit_account = values.credit_account\n                        var amount = values.amount\n                        var user_remarks = values.user_remark;\n                        console.log(user_remarks)\n                        \n                       \n                        \n                            \n                            \n                            var newJvEntry = frappe.model.get_new_doc('Journal Entry');\n                            \t\tnewJvEntry.voucher_type = \"Journal Entry\";\n                            // \t\tnewJvEntry.company = company;\n                            \t\tnewJvEntry.docstatus = 0;\n                            \t\tnewJvEntry.posting_date = today;\n                            \t\tnewJvEntry.from_date = from_date;\n                            \t\tnewJvEntry.to_date = to_date;\n                            \t\tnewJvEntry.user_remark = user_remarks\n                            \t\t\n                            \t\t\n                            \t\t\n                            \t\n                            \t\tnewJvEntry.accounts = [];\n                 \n                            \t\t\t// console.log(description_of_goods, source_warehouse)\n                            \t\t\tnewJvEntry.accounts.push({\n                            \t\t\t\t\"account\":'Prepaid Expense - SD',\n                            \t\t\t\t\"debit_in_account_currency\": amount,\n                            \t\t\t\t\n                            \t\t\t\n                            \t\t\t});\n                            \t\t\t\tnewJvEntry.accounts.push({\n                            \t\t\t\t\"account\": credit_account,\n                            \t\t\t\t\"credit_in_account_currency\": amount,\n                            \t\t\t\t\n                            \t\t\t\t\n                            \t\t\t\n                            \t\t\t});console.log(\"New Journal Entry:\", newJvEntry);\n\n                                         // Save the Journal Entry\n                                        frappe.call({\n                                            method: 'frappe.client.save',\n                                            args: {\n                                                doc: newJvEntry\n                                            },\n                                            callback: function (r) {\n                                                if (r.message) {\n                                                    console.log(\"Journal Entry saved successfully:\", r.message);\n                                                } else {\n                                                    console.error(\"Error saving Journal Entry:\", r.exc);\n                                                }\n                                        }\n                                });\n                        \n                        \n                        \n                        d.hide();\n                    }\n                });\n                \n                d.show();\n\n\t         \n\t     })\n//               let d = new frappe.ui.Dialog({\n//     title: 'Enter details',\n//     fields: [\n//         {\n//             label: 'First Name',\n//             fieldname: 'first_name',\n//             fieldtype: 'Data'\n//         },\n//         {\n//             label: 'Last Name',\n//             fieldname: 'last_name',\n//             fieldtype: 'Data'\n//         },\n//         {\n//             label: 'Age',\n//             fieldname: 'age',\n//             fieldtype: 'Int'\n//         }\n//     ],\n//     size: 'small', // small, large, extra-large \n//     primary_action_label: 'Submit',\n//     primary_action(values) {\n//         console.log(values);\n//         d.hide();\n//     }\n// });\n\n// d.show();\n\n    \n\n\t \n            \n\t    \n\t\t// your code here\n\t}\n})",
  "view": "Form"
 },
 {
  "docstatus": 0,
  "doctype": "Client Script",
  "dt": "Customer",
  "enabled": 1,
  "modified": "2023-11-22 13:01:09.582552",
  "module": "Ambika Accounts",
  "name": "TCS Logics",
  "script": "frappe.ui.form.on('Customer', {\n\trefresh:function(frm) {\n\t    var answer = frm.doc.custom_turn_over_more_then_10cr\n\t    var declaration = frm.doc.custom_tds_declaration\n\t    console.log(declaration)\n\t    console.log(\".................\")\n\t    console.log(answer)\n\t    if (answer ==  'Yes' && declaration != null){\n\t       frm.set_value('tax_withholding_category','TCS @ 0.1%')\n\t    }\n\t    else{\n\t        frm.set_value('tax_withholding_category',' ')\n\t        \n\t    }\n\t    \n\t\t// your code here\n\t}\n})",
  "view": "Form"
 },
 {
  "docstatus": 0,
  "doctype": "Client Script",
  "dt": "Purchase Invoice",
  "enabled": 1,
  "modified": "2023-11-07 18:45:33.511107",
  "module": "Ambika Accounts",
  "name": "Payment Terms Due Date Chane in Pi",
  "script": "frappe.ui.form.on('Purchase Invoice', {\n\tsupplier_name(frm) {\n\t    var supplier = frm.doc.supplier\n\t    frappe.db.get_list('Supplier',{\n\t        fields:['payment_terms'],\n\t        filters:{\n\t            name:supplier\n\t        }\n\t       \n\t    }).then(rec => {\n\t        for (var d in rec){\n\t            var payment_term = rec[d].payment_terms\n\t        }\n\t        console.log(payment_term)\n\t        frappe.db.get_list('Payment Terms Template',{\n\t            fields:['due_date_based_on'],\n\t            filters:{\n\t                name:payment_term\n\t            }\n\t        }).then(records => {\n\t        for (var de in records){\n\t            var based_on = records[d].due_date_based_on\n\t        }\n\t        console.log(based_on)\n\t        })\n\t        \n\t        \n\t    })\n\t\t// your code here\n\t}\n})",
  "view": "Form"
 },
 {
  "docstatus": 0,
  "doctype": "Client Script",
  "dt": "Payment Entry",
  "enabled": 1,
  "modified": "2023-11-08 12:26:59.119303",
  "module": "Ambika Accounts",
  "name": "Dialog Box",
  "script": "frappe.ui.form.on('Payment Entry', {\n    onload: function(frm) {\n        frm.add_custom_button(__('Purchase Order'), function() {\n            var d = new frappe.ui.form.MultiSelectDialog({\n                doctype: \"Purchase Order\",\n                target: frm,\n                setters: {\n                    supplier_name: null,\n                    schedule_date: null\n                },\n                action(selections, args) {\n                    // Extract the selected Purchase Order names\n                    var selectedPurchaseOrders = selections.map(item => `${item.name} (Supplier: ${item.supplier_name})`);\n                    console.log(selectedPurchaseOrders);\n                    frappe.msgprint(\"Selected Purchase Orders: \" + selectedPurchaseOrders.join(', '));\n                    // Make an HTTP request to the server script\n                    frappe.call({\n                        method: 'API',\n                        args: {\n                            selected_purchase_orders: selections\n                        },\n                        callback: function(response) {\n                            if (!response.exc) {\n                                // Successfully received a response from the server\n                                frappe.msgprint(response.message);\n                            }\n                        }\n                    });\n                }\n            });\n            d.show();\n        }, __(\"Get Items From\"));\n    }\n});\n",
  "view": "Form"
 }
]